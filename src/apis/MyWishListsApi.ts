/* tslint:disable */
/* eslint-disable */
/**
 * Auth
 * Auth API
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import {
    WishListDTO,
    WishListDTOFromJSON,
    WishListDTOToJSON,
    WishListDraftDTO,
    WishListDraftDTOFromJSON,
    WishListDraftDTOToJSON,
} from '../models';

export interface AddMyWishlistProductRequest {
    productId: string;
}

export interface CreateMyWishlistRequest {
    wishListDraftDTO: WishListDraftDTO;
}

export interface RemoveMyWishlistProductRequest {
    productId: string;
}

/**
 * 
 */
export class MyWishListsApi extends runtime.BaseAPI {

    /**
     * Adds a product to the current user\'s wish list.
     */
    async addMyWishlistProductRaw(requestParameters: AddMyWishlistProductRequest): Promise<runtime.ApiResponse<WishListDTO>> {
        if (requestParameters.productId === null || requestParameters.productId === undefined) {
            throw new runtime.RequiredError('productId','Required parameter requestParameters.productId was null or undefined when calling addMyWishlistProduct.');
        }

        const queryParameters: runtime.HTTPQuery = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/fulfillment/my/wish-list/products/{productId}`.replace(`{${"productId"}}`, encodeURIComponent(String(requestParameters.productId))),
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
        });

        return new runtime.JSONApiResponse(response, (jsonValue) => WishListDTOFromJSON(jsonValue));
    }

    /**
     * Adds a product to the current user\'s wish list.
     */
    async addMyWishlistProduct(requestParameters: AddMyWishlistProductRequest): Promise<WishListDTO> {
        const response = await this.addMyWishlistProductRaw(requestParameters);
        return await response.value();
    }

    /**
     * Creates a new wish list for the current user.
     */
    async createMyWishlistRaw(requestParameters: CreateMyWishlistRequest): Promise<runtime.ApiResponse<WishListDTO>> {
        if (requestParameters.wishListDraftDTO === null || requestParameters.wishListDraftDTO === undefined) {
            throw new runtime.RequiredError('wishListDraftDTO','Required parameter requestParameters.wishListDraftDTO was null or undefined when calling createMyWishlist.');
        }

        const queryParameters: runtime.HTTPQuery = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/fulfillment/my/wish-list`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: WishListDraftDTOToJSON(requestParameters.wishListDraftDTO),
        });

        return new runtime.JSONApiResponse(response, (jsonValue) => WishListDTOFromJSON(jsonValue));
    }

    /**
     * Creates a new wish list for the current user.
     */
    async createMyWishlist(requestParameters: CreateMyWishlistRequest): Promise<WishListDTO> {
        const response = await this.createMyWishlistRaw(requestParameters);
        return await response.value();
    }

    /**
     * Returns the wishlist for the current user.
     */
    async getMyWishListRaw(): Promise<runtime.ApiResponse<WishListDTO>> {
        const queryParameters: runtime.HTTPQuery = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/fulfillment/my/wish-list`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        });

        return new runtime.JSONApiResponse(response, (jsonValue) => WishListDTOFromJSON(jsonValue));
    }

    /**
     * Returns the wishlist for the current user.
     */
    async getMyWishList(): Promise<WishListDTO> {
        const response = await this.getMyWishListRaw();
        return await response.value();
    }

    /**
     * Removes a product from the current user\'s wish list.
     */
    async removeMyWishlistProductRaw(requestParameters: RemoveMyWishlistProductRequest): Promise<runtime.ApiResponse<WishListDTO>> {
        if (requestParameters.productId === null || requestParameters.productId === undefined) {
            throw new runtime.RequiredError('productId','Required parameter requestParameters.productId was null or undefined when calling removeMyWishlistProduct.');
        }

        const queryParameters: runtime.HTTPQuery = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/fulfillment/my/wish-list/products/{productId}`.replace(`{${"productId"}}`, encodeURIComponent(String(requestParameters.productId))),
            method: 'DELETE',
            headers: headerParameters,
            query: queryParameters,
        });

        return new runtime.JSONApiResponse(response, (jsonValue) => WishListDTOFromJSON(jsonValue));
    }

    /**
     * Removes a product from the current user\'s wish list.
     */
    async removeMyWishlistProduct(requestParameters: RemoveMyWishlistProductRequest): Promise<WishListDTO> {
        const response = await this.removeMyWishlistProductRaw(requestParameters);
        return await response.value();
    }

}

/* tslint:disable */
/* eslint-disable */
/**
 * Auth
 * Auth API
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    AttributeValueDTO,
    AttributeValueDTOFromJSON,
    AttributeValueDTOFromJSONTyped,
    AttributeValueDTOToJSON,
} from './';

/**
 * 
 * @export
 * @interface AttributeDraftDTO
 */
export interface AttributeDraftDTO {
    /**
     * 
     * @type {number}
     * @memberof AttributeDraftDTO
     */
    version?: number;
    /**
     * 
     * @type {string}
     * @memberof AttributeDraftDTO
     */
    name: string;
    /**
     * 
     * @type {object}
     * @memberof AttributeDraftDTO
     */
    label: object;
    /**
     * 
     * @type {boolean}
     * @memberof AttributeDraftDTO
     */
    isSearchable?: boolean;
    /**
     * 
     * @type {Array<AttributeValueDTO>}
     * @memberof AttributeDraftDTO
     */
    values?: Array<AttributeValueDTO>;
}

export function AttributeDraftDTOFromJSON(json: any): AttributeDraftDTO {
    return AttributeDraftDTOFromJSONTyped(json, false);
}

export function AttributeDraftDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): AttributeDraftDTO {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'version': !exists(json, 'version') ? undefined : json['version'],
        'name': json['name'],
        'label': json['label'],
        'isSearchable': !exists(json, 'isSearchable') ? undefined : json['isSearchable'],
        'values': !exists(json, 'values') ? undefined : ((json['values'] as Array<any>).map(AttributeValueDTOFromJSON)),
    };
}

export function AttributeDraftDTOToJSON(value?: AttributeDraftDTO | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'version': value.version,
        'name': value.name,
        'label': value.label,
        'isSearchable': value.isSearchable,
        'values': value.values === undefined ? undefined : ((value.values as Array<any>).map(AttributeValueDTOToJSON)),
    };
}



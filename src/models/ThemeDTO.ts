/* tslint:disable */
/* eslint-disable */
/**
 * Auth
 * Auth API
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    WidgetDraftDTO,
    WidgetDraftDTOFromJSON,
    WidgetDraftDTOFromJSONTyped,
    WidgetDraftDTOToJSON,
    WidgetTemplateDraftDTO,
    WidgetTemplateDraftDTOFromJSON,
    WidgetTemplateDraftDTOFromJSONTyped,
    WidgetTemplateDraftDTOToJSON,
} from './';

/**
 * 
 * @export
 * @interface ThemeDTO
 */
export interface ThemeDTO {
    /**
     * 
     * @type {string}
     * @memberof ThemeDTO
     */
    viewKey: string;
    /**
     * 
     * @type {string}
     * @memberof ThemeDTO
     */
    key: string;
    /**
     * 
     * @type {string}
     * @memberof ThemeDTO
     */
    version: string;
    /**
     * 
     * @type {Array<WidgetDraftDTO>}
     * @memberof ThemeDTO
     */
    widgets: Array<WidgetDraftDTO>;
    /**
     * 
     * @type {object}
     * @memberof ThemeDTO
     */
    configSchema: object;
    /**
     * 
     * @type {object}
     * @memberof ThemeDTO
     */
    defaultConfig: object;
    /**
     * 
     * @type {Array<WidgetTemplateDraftDTO>}
     * @memberof ThemeDTO
     */
    defaultTemplates: Array<WidgetTemplateDraftDTO>;
    /**
     * 
     * @type {Array<object>}
     * @memberof ThemeDTO
     */
    defaultPages: Array<object>;
    /**
     * 
     * @type {string}
     * @memberof ThemeDTO
     */
    id: string;
    /**
     * 
     * @type {number}
     * @memberof ThemeDTO
     */
    createdAt: number;
    /**
     * 
     * @type {number}
     * @memberof ThemeDTO
     */
    updatedAt: number;
}

export function ThemeDTOFromJSON(json: any): ThemeDTO {
    return ThemeDTOFromJSONTyped(json, false);
}

export function ThemeDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): ThemeDTO {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'viewKey': json['viewKey'],
        'key': json['key'],
        'version': json['version'],
        'widgets': ((json['widgets'] as Array<any>).map(WidgetDraftDTOFromJSON)),
        'configSchema': json['configSchema'],
        'defaultConfig': json['defaultConfig'],
        'defaultTemplates': ((json['defaultTemplates'] as Array<any>).map(WidgetTemplateDraftDTOFromJSON)),
        'defaultPages': json['defaultPages'],
        'id': json['_id'],
        'createdAt': json['createdAt'],
        'updatedAt': json['updatedAt'],
    };
}

export function ThemeDTOToJSON(value?: ThemeDTO | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'viewKey': value.viewKey,
        'key': value.key,
        'version': value.version,
        'widgets': ((value.widgets as Array<any>).map(WidgetDraftDTOToJSON)),
        'configSchema': value.configSchema,
        'defaultConfig': value.defaultConfig,
        'defaultTemplates': ((value.defaultTemplates as Array<any>).map(WidgetTemplateDraftDTOToJSON)),
        'defaultPages': value.defaultPages,
        '_id': value.id,
        'createdAt': value.createdAt,
        'updatedAt': value.updatedAt,
    };
}



/* tslint:disable */
/* eslint-disable */
/**
 * Auth
 * Auth API
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    IdReferenceDTO,
    IdReferenceDTOFromJSON,
    IdReferenceDTOFromJSONTyped,
    IdReferenceDTOToJSON,
} from './';

/**
 * 
 * @export
 * @interface DiscountCodeDTO
 */
export interface DiscountCodeDTO {
    /**
     * 
     * @type {string}
     * @memberof DiscountCodeDTO
     */
    id: string;
    /**
     * 
     * @type {number}
     * @memberof DiscountCodeDTO
     */
    createdAt: number;
    /**
     * 
     * @type {number}
     * @memberof DiscountCodeDTO
     */
    updatedAt: number;
    /**
     * 
     * @type {string}
     * @memberof DiscountCodeDTO
     */
    authority: DiscountCodeDTOAuthorityEnum;
    /**
     * 
     * @type {string}
     * @memberof DiscountCodeDTO
     */
    merchantKey?: string;
    /**
     * 
     * @type {object}
     * @memberof DiscountCodeDTO
     */
    name: object;
    /**
     * 
     * @type {object}
     * @memberof DiscountCodeDTO
     */
    description?: object;
    /**
     * 
     * @type {string}
     * @memberof DiscountCodeDTO
     */
    code: string;
    /**
     * 
     * @type {Array<IdReferenceDTO>}
     * @memberof DiscountCodeDTO
     */
    cartDiscounts: Array<IdReferenceDTO>;
    /**
     * 
     * @type {string}
     * @memberof DiscountCodeDTO
     */
    cartPredicate: string;
    /**
     * 
     * @type {Array<string>}
     * @memberof DiscountCodeDTO
     */
    groups: Array<string>;
    /**
     * 
     * @type {boolean}
     * @memberof DiscountCodeDTO
     */
    isActive: boolean;
    /**
     * 
     * @type {number}
     * @memberof DiscountCodeDTO
     */
    validFrom?: number;
    /**
     * 
     * @type {number}
     * @memberof DiscountCodeDTO
     */
    validTo?: number;
    /**
     * 
     * @type {number}
     * @memberof DiscountCodeDTO
     */
    maxApplications?: number;
    /**
     * 
     * @type {number}
     * @memberof DiscountCodeDTO
     */
    maxApplicationsPerCustomer?: number;
    /**
     * 
     * @type {number}
     * @memberof DiscountCodeDTO
     */
    totalApplications: number;
    /**
     * 
     * @type {object}
     * @memberof DiscountCodeDTO
     */
    applicationsPerCustomer: object;
}

export function DiscountCodeDTOFromJSON(json: any): DiscountCodeDTO {
    return DiscountCodeDTOFromJSONTyped(json, false);
}

export function DiscountCodeDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): DiscountCodeDTO {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'createdAt': json['createdAt'],
        'updatedAt': json['updatedAt'],
        'authority': json['authority'],
        'merchantKey': !exists(json, 'merchantKey') ? undefined : json['merchantKey'],
        'name': json['name'],
        'description': !exists(json, 'description') ? undefined : json['description'],
        'code': json['code'],
        'cartDiscounts': ((json['cartDiscounts'] as Array<any>).map(IdReferenceDTOFromJSON)),
        'cartPredicate': json['cartPredicate'],
        'groups': json['groups'],
        'isActive': json['isActive'],
        'validFrom': !exists(json, 'validFrom') ? undefined : json['validFrom'],
        'validTo': !exists(json, 'validTo') ? undefined : json['validTo'],
        'maxApplications': !exists(json, 'maxApplications') ? undefined : json['maxApplications'],
        'maxApplicationsPerCustomer': !exists(json, 'maxApplicationsPerCustomer') ? undefined : json['maxApplicationsPerCustomer'],
        'totalApplications': json['totalApplications'],
        'applicationsPerCustomer': json['applicationsPerCustomer'],
    };
}

export function DiscountCodeDTOToJSON(value?: DiscountCodeDTO | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'createdAt': value.createdAt,
        'updatedAt': value.updatedAt,
        'authority': value.authority,
        'merchantKey': value.merchantKey,
        'name': value.name,
        'description': value.description,
        'code': value.code,
        'cartDiscounts': ((value.cartDiscounts as Array<any>).map(IdReferenceDTOToJSON)),
        'cartPredicate': value.cartPredicate,
        'groups': value.groups,
        'isActive': value.isActive,
        'validFrom': value.validFrom,
        'validTo': value.validTo,
        'maxApplications': value.maxApplications,
        'maxApplicationsPerCustomer': value.maxApplicationsPerCustomer,
        'totalApplications': value.totalApplications,
        'applicationsPerCustomer': value.applicationsPerCustomer,
    };
}

/**
* @export
* @enum {string}
*/
export enum DiscountCodeDTOAuthorityEnum {
    Platform = 'Platform',
    Merchant = 'Merchant'
}



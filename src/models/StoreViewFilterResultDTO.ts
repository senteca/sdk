/* tslint:disable */
/* eslint-disable */
/**
 * Auth
 * Auth API
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    StoreViewDTO,
    StoreViewDTOFromJSON,
    StoreViewDTOFromJSONTyped,
    StoreViewDTOToJSON,
} from './';

/**
 * 
 * @export
 * @interface StoreViewFilterResultDTO
 */
export interface StoreViewFilterResultDTO {
    /**
     * 
     * @type {Array<StoreViewDTO>}
     * @memberof StoreViewFilterResultDTO
     */
    results: Array<StoreViewDTO>;
    /**
     * 
     * @type {number}
     * @memberof StoreViewFilterResultDTO
     */
    offset: number;
    /**
     * 
     * @type {number}
     * @memberof StoreViewFilterResultDTO
     */
    limit: number;
    /**
     * 
     * @type {number}
     * @memberof StoreViewFilterResultDTO
     */
    count: number;
    /**
     * 
     * @type {number}
     * @memberof StoreViewFilterResultDTO
     */
    total: number;
}

export function StoreViewFilterResultDTOFromJSON(json: any): StoreViewFilterResultDTO {
    return StoreViewFilterResultDTOFromJSONTyped(json, false);
}

export function StoreViewFilterResultDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): StoreViewFilterResultDTO {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'results': ((json['results'] as Array<any>).map(StoreViewDTOFromJSON)),
        'offset': json['offset'],
        'limit': json['limit'],
        'count': json['count'],
        'total': json['total'],
    };
}

export function StoreViewFilterResultDTOToJSON(value?: StoreViewFilterResultDTO | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'results': ((value.results as Array<any>).map(StoreViewDTOToJSON)),
        'offset': value.offset,
        'limit': value.limit,
        'count': value.count,
        'total': value.total,
    };
}



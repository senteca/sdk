/* tslint:disable */
/* eslint-disable */
/**
 * Auth
 * Auth API
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    AttributeValueDTO,
    AttributeValueDTOFromJSON,
    AttributeValueDTOFromJSONTyped,
    AttributeValueDTOToJSON,
} from './';

/**
 * 
 * @export
 * @interface AttributeDTO
 */
export interface AttributeDTO {
    /**
     * 
     * @type {string}
     * @memberof AttributeDTO
     */
    id: string;
    /**
     * 
     * @type {number}
     * @memberof AttributeDTO
     */
    createdAt: number;
    /**
     * 
     * @type {number}
     * @memberof AttributeDTO
     */
    updatedAt: number;
    /**
     * 
     * @type {number}
     * @memberof AttributeDTO
     */
    version?: number;
    /**
     * 
     * @type {string}
     * @memberof AttributeDTO
     */
    name: string;
    /**
     * 
     * @type {object}
     * @memberof AttributeDTO
     */
    label: object;
    /**
     * 
     * @type {boolean}
     * @memberof AttributeDTO
     */
    isSearchable?: boolean;
    /**
     * 
     * @type {Array<AttributeValueDTO>}
     * @memberof AttributeDTO
     */
    values?: Array<AttributeValueDTO>;
}

export function AttributeDTOFromJSON(json: any): AttributeDTO {
    return AttributeDTOFromJSONTyped(json, false);
}

export function AttributeDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): AttributeDTO {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'createdAt': json['createdAt'],
        'updatedAt': json['updatedAt'],
        'version': !exists(json, 'version') ? undefined : json['version'],
        'name': json['name'],
        'label': json['label'],
        'isSearchable': !exists(json, 'isSearchable') ? undefined : json['isSearchable'],
        'values': !exists(json, 'values') ? undefined : ((json['values'] as Array<any>).map(AttributeValueDTOFromJSON)),
    };
}

export function AttributeDTOToJSON(value?: AttributeDTO | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'createdAt': value.createdAt,
        'updatedAt': value.updatedAt,
        'version': value.version,
        'name': value.name,
        'label': value.label,
        'isSearchable': value.isSearchable,
        'values': value.values === undefined ? undefined : ((value.values as Array<any>).map(AttributeValueDTOToJSON)),
    };
}



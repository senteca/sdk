/* tslint:disable */
/* eslint-disable */
/**
 * Auth
 * Auth API
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface KeyReferenceDTO
 */
export interface KeyReferenceDTO {
    /**
     * 
     * @type {string}
     * @memberof KeyReferenceDTO
     */
    resourceKey: string;
    /**
     * 
     * @type {string}
     * @memberof KeyReferenceDTO
     */
    resourceType: KeyReferenceDTOResourceTypeEnum;
    /**
     * 
     * @type {object}
     * @memberof KeyReferenceDTO
     */
    resource?: object;
}

export function KeyReferenceDTOFromJSON(json: any): KeyReferenceDTO {
    return KeyReferenceDTOFromJSONTyped(json, false);
}

export function KeyReferenceDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): KeyReferenceDTO {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'resourceKey': json['resourceKey'],
        'resourceType': json['resourceType'],
        'resource': !exists(json, 'resource') ? undefined : json['resource'],
    };
}

export function KeyReferenceDTOToJSON(value?: KeyReferenceDTO | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'resourceKey': value.resourceKey,
        'resourceType': value.resourceType,
        'resource': value.resource,
    };
}

/**
* @export
* @enum {string}
*/
export enum KeyReferenceDTOResourceTypeEnum {
    Store = 'store',
    Address = 'address',
    Brand = 'brand',
    Category = 'category',
    Collection = 'collection',
    View = 'view',
    Wallet = 'wallet',
    WalletType = 'wallet-type',
    Customer = 'customer',
    CustomerGroup = 'customer-group',
    ProductDiscount = 'product-discount',
    CartDiscount = 'cart-discount',
    DiscountCode = 'discount-code',
    Item = 'item',
    Order = 'order',
    Payment = 'payment',
    Merchant = 'merchant',
    Product = 'product',
    Shipping = 'shipping',
    TaxCategory = 'tax-category',
    PriceList = 'price-list',
    ShippingMethod = 'shipping-method',
    PaymentMethod = 'payment-method',
    State = 'state'
}



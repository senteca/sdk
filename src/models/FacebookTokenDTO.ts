/* tslint:disable */
/* eslint-disable */
/**
 * Auth
 * Auth API
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface FacebookTokenDTO
 */
export interface FacebookTokenDTO {
    /**
     * 
     * @type {string}
     * @memberof FacebookTokenDTO
     */
    grantType: FacebookTokenDTOGrantTypeEnum;
    /**
     * 
     * @type {string}
     * @memberof FacebookTokenDTO
     */
    email?: string;
    /**
     * 
     * @type {string}
     * @memberof FacebookTokenDTO
     */
    password?: string;
    /**
     * 
     * @type {string}
     * @memberof FacebookTokenDTO
     */
    refreshToken?: string;
    /**
     * 
     * @type {boolean}
     * @memberof FacebookTokenDTO
     */
    isOrgUser?: boolean;
    /**
     * 
     * @type {string}
     * @memberof FacebookTokenDTO
     */
    anonymousId?: string;
    /**
     * 
     * @type {string}
     * @memberof FacebookTokenDTO
     */
    facebookId: string;
    /**
     * 
     * @type {string}
     * @memberof FacebookTokenDTO
     */
    facebookToken: string;
}

export function FacebookTokenDTOFromJSON(json: any): FacebookTokenDTO {
    return FacebookTokenDTOFromJSONTyped(json, false);
}

export function FacebookTokenDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): FacebookTokenDTO {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'grantType': json['grantType'],
        'email': !exists(json, 'email') ? undefined : json['email'],
        'password': !exists(json, 'password') ? undefined : json['password'],
        'refreshToken': !exists(json, 'refreshToken') ? undefined : json['refreshToken'],
        'isOrgUser': !exists(json, 'isOrgUser') ? undefined : json['isOrgUser'],
        'anonymousId': !exists(json, 'anonymousId') ? undefined : json['anonymousId'],
        'facebookId': json['facebookId'],
        'facebookToken': json['facebookToken'],
    };
}

export function FacebookTokenDTOToJSON(value?: FacebookTokenDTO | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'grantType': value.grantType,
        'email': value.email,
        'password': value.password,
        'refreshToken': value.refreshToken,
        'isOrgUser': value.isOrgUser,
        'anonymousId': value.anonymousId,
        'facebookId': value.facebookId,
        'facebookToken': value.facebookToken,
    };
}

/**
* @export
* @enum {string}
*/
export enum FacebookTokenDTOGrantTypeEnum {
    Code = 'code',
    PasswordCredentials = 'password-credentials',
    ClientCredentials = 'client-credentials',
    Implicit = 'implicit',
    RefreshToken = 'refresh-token'
}



/* tslint:disable */
/* eslint-disable */
/**
 * Auth
 * Auth API
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    CartDiscountTargetDTO,
    CartDiscountTargetDTOFromJSON,
    CartDiscountTargetDTOFromJSONTyped,
    CartDiscountTargetDTOToJSON,
    CartDiscountValueDTO,
    CartDiscountValueDTOFromJSON,
    CartDiscountValueDTOFromJSONTyped,
    CartDiscountValueDTOToJSON,
} from './';

/**
 * 
 * @export
 * @interface CartDiscountDTO
 */
export interface CartDiscountDTO {
    /**
     * 
     * @type {string}
     * @memberof CartDiscountDTO
     */
    id: string;
    /**
     * 
     * @type {number}
     * @memberof CartDiscountDTO
     */
    createdAt: number;
    /**
     * 
     * @type {number}
     * @memberof CartDiscountDTO
     */
    updatedAt: number;
    /**
     * 
     * @type {string}
     * @memberof CartDiscountDTO
     */
    authority: CartDiscountDTOAuthorityEnum;
    /**
     * 
     * @type {string}
     * @memberof CartDiscountDTO
     */
    merchantKey?: string;
    /**
     * 
     * @type {object}
     * @memberof CartDiscountDTO
     */
    name: object;
    /**
     * 
     * @type {object}
     * @memberof CartDiscountDTO
     */
    description?: object;
    /**
     * 
     * @type {CartDiscountValueDTO}
     * @memberof CartDiscountDTO
     */
    value: CartDiscountValueDTO;
    /**
     * 
     * @type {string}
     * @memberof CartDiscountDTO
     */
    cartPredicate: string;
    /**
     * 
     * @type {CartDiscountTargetDTO}
     * @memberof CartDiscountDTO
     */
    target: CartDiscountTargetDTO;
    /**
     * 
     * @type {number}
     * @memberof CartDiscountDTO
     */
    sortOrder: number;
    /**
     * 
     * @type {boolean}
     * @memberof CartDiscountDTO
     */
    isActive: boolean;
    /**
     * 
     * @type {number}
     * @memberof CartDiscountDTO
     */
    validFrom?: number;
    /**
     * 
     * @type {number}
     * @memberof CartDiscountDTO
     */
    validTo?: number;
    /**
     * 
     * @type {boolean}
     * @memberof CartDiscountDTO
     */
    requiresDiscountCode: boolean;
    /**
     * 
     * @type {string}
     * @memberof CartDiscountDTO
     */
    stackingMode: string;
}

export function CartDiscountDTOFromJSON(json: any): CartDiscountDTO {
    return CartDiscountDTOFromJSONTyped(json, false);
}

export function CartDiscountDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): CartDiscountDTO {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'createdAt': json['createdAt'],
        'updatedAt': json['updatedAt'],
        'authority': json['authority'],
        'merchantKey': !exists(json, 'merchantKey') ? undefined : json['merchantKey'],
        'name': json['name'],
        'description': !exists(json, 'description') ? undefined : json['description'],
        'value': CartDiscountValueDTOFromJSON(json['value']),
        'cartPredicate': json['cartPredicate'],
        'target': CartDiscountTargetDTOFromJSON(json['target']),
        'sortOrder': json['sortOrder'],
        'isActive': json['isActive'],
        'validFrom': !exists(json, 'validFrom') ? undefined : json['validFrom'],
        'validTo': !exists(json, 'validTo') ? undefined : json['validTo'],
        'requiresDiscountCode': json['requiresDiscountCode'],
        'stackingMode': json['stackingMode'],
    };
}

export function CartDiscountDTOToJSON(value?: CartDiscountDTO | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'createdAt': value.createdAt,
        'updatedAt': value.updatedAt,
        'authority': value.authority,
        'merchantKey': value.merchantKey,
        'name': value.name,
        'description': value.description,
        'value': CartDiscountValueDTOToJSON(value.value),
        'cartPredicate': value.cartPredicate,
        'target': CartDiscountTargetDTOToJSON(value.target),
        'sortOrder': value.sortOrder,
        'isActive': value.isActive,
        'validFrom': value.validFrom,
        'validTo': value.validTo,
        'requiresDiscountCode': value.requiresDiscountCode,
        'stackingMode': value.stackingMode,
    };
}

/**
* @export
* @enum {string}
*/
export enum CartDiscountDTOAuthorityEnum {
    Platform = 'Platform',
    Merchant = 'Merchant'
}



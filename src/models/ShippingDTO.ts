/* tslint:disable */
/* eslint-disable */
/**
 * Auth
 * Auth API
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    DiscountedLineItemPriceDTO,
    DiscountedLineItemPriceDTOFromJSON,
    DiscountedLineItemPriceDTOFromJSONTyped,
    DiscountedLineItemPriceDTOToJSON,
    IdReferenceDTO,
    IdReferenceDTOFromJSON,
    IdReferenceDTOFromJSONTyped,
    IdReferenceDTOToJSON,
    KeyReferenceDTO,
    KeyReferenceDTOFromJSON,
    KeyReferenceDTOFromJSONTyped,
    KeyReferenceDTOToJSON,
    MoneyDTO,
    MoneyDTOFromJSON,
    MoneyDTOFromJSONTyped,
    MoneyDTOToJSON,
    ShippingDeliveryDTO,
    ShippingDeliveryDTOFromJSON,
    ShippingDeliveryDTOFromJSONTyped,
    ShippingDeliveryDTOToJSON,
    ShippingDeliveryItemDTO,
    ShippingDeliveryItemDTOFromJSON,
    ShippingDeliveryItemDTOFromJSONTyped,
    ShippingDeliveryItemDTOToJSON,
    ShippingInterfaceInteractionDTO,
    ShippingInterfaceInteractionDTOFromJSON,
    ShippingInterfaceInteractionDTOFromJSONTyped,
    ShippingInterfaceInteractionDTOToJSON,
    TaxRateDTO,
    TaxRateDTOFromJSON,
    TaxRateDTOFromJSONTyped,
    TaxRateDTOToJSON,
    TaxedPriceDTO,
    TaxedPriceDTOFromJSON,
    TaxedPriceDTOFromJSONTyped,
    TaxedPriceDTOToJSON,
} from './';

/**
 * 
 * @export
 * @interface ShippingDTO
 */
export interface ShippingDTO {
    /**
     * 
     * @type {number}
     * @memberof ShippingDTO
     */
    createdAt?: number;
    /**
     * 
     * @type {number}
     * @memberof ShippingDTO
     */
    updatedAt?: number;
    /**
     * 
     * @type {string}
     * @memberof ShippingDTO
     */
    id?: string;
    /**
     * 
     * @type {string}
     * @memberof ShippingDTO
     */
    status: ShippingDTOStatusEnum;
    /**
     * 
     * @type {IdReferenceDTO}
     * @memberof ShippingDTO
     */
    method: IdReferenceDTO;
    /**
     * 
     * @type {string}
     * @memberof ShippingDTO
     */
    type: ShippingDTOTypeEnum;
    /**
     * 
     * @type {string}
     * @memberof ShippingDTO
     */
    authority: ShippingDTOAuthorityEnum;
    /**
     * 
     * @type {KeyReferenceDTO}
     * @memberof ShippingDTO
     */
    merchant?: KeyReferenceDTO;
    /**
     * 
     * @type {string}
     * @memberof ShippingDTO
     */
    providerType?: ShippingDTOProviderTypeEnum;
    /**
     * 
     * @type {MoneyDTO}
     * @memberof ShippingDTO
     */
    price?: MoneyDTO;
    /**
     * 
     * @type {TaxedPriceDTO}
     * @memberof ShippingDTO
     */
    taxedPrice?: TaxedPriceDTO;
    /**
     * 
     * @type {IdReferenceDTO}
     * @memberof ShippingDTO
     */
    taxCategory: IdReferenceDTO;
    /**
     * 
     * @type {TaxRateDTO}
     * @memberof ShippingDTO
     */
    taxRate: TaxRateDTO;
    /**
     * 
     * @type {DiscountedLineItemPriceDTO}
     * @memberof ShippingDTO
     */
    discountedPrice?: DiscountedLineItemPriceDTO;
    /**
     * 
     * @type {boolean}
     * @memberof ShippingDTO
     */
    isCOD?: boolean;
    /**
     * 
     * @type {MoneyDTO}
     * @memberof ShippingDTO
     */
    codPrice?: MoneyDTO;
    /**
     * 
     * @type {MoneyDTO}
     * @memberof ShippingDTO
     */
    codNetPrice?: MoneyDTO;
    /**
     * 
     * @type {DiscountedLineItemPriceDTO}
     * @memberof ShippingDTO
     */
    codDiscount?: DiscountedLineItemPriceDTO;
    /**
     * 
     * @type {TaxedPriceDTO}
     * @memberof ShippingDTO
     */
    codTaxedPrice?: TaxedPriceDTO;
    /**
     * 
     * @type {string}
     * @memberof ShippingDTO
     */
    paymentId?: string;
    /**
     * 
     * @type {Array<ShippingDeliveryItemDTO>}
     * @memberof ShippingDTO
     */
    items: Array<ShippingDeliveryItemDTO>;
    /**
     * 
     * @type {Array<ShippingDeliveryDTO>}
     * @memberof ShippingDTO
     */
    deliveries?: Array<ShippingDeliveryDTO>;
    /**
     * 
     * @type {Array<ShippingInterfaceInteractionDTO>}
     * @memberof ShippingDTO
     */
    interfaceInteractions?: Array<ShippingInterfaceInteractionDTO>;
}

export function ShippingDTOFromJSON(json: any): ShippingDTO {
    return ShippingDTOFromJSONTyped(json, false);
}

export function ShippingDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): ShippingDTO {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'createdAt': !exists(json, 'createdAt') ? undefined : json['createdAt'],
        'updatedAt': !exists(json, 'updatedAt') ? undefined : json['updatedAt'],
        'id': !exists(json, 'id') ? undefined : json['id'],
        'status': json['status'],
        'method': IdReferenceDTOFromJSON(json['method']),
        'type': json['type'],
        'authority': json['authority'],
        'merchant': !exists(json, 'merchant') ? undefined : KeyReferenceDTOFromJSON(json['merchant']),
        'providerType': !exists(json, 'providerType') ? undefined : json['providerType'],
        'price': !exists(json, 'price') ? undefined : MoneyDTOFromJSON(json['price']),
        'taxedPrice': !exists(json, 'taxedPrice') ? undefined : TaxedPriceDTOFromJSON(json['taxedPrice']),
        'taxCategory': IdReferenceDTOFromJSON(json['taxCategory']),
        'taxRate': TaxRateDTOFromJSON(json['taxRate']),
        'discountedPrice': !exists(json, 'discountedPrice') ? undefined : DiscountedLineItemPriceDTOFromJSON(json['discountedPrice']),
        'isCOD': !exists(json, 'isCOD') ? undefined : json['isCOD'],
        'codPrice': !exists(json, 'codPrice') ? undefined : MoneyDTOFromJSON(json['codPrice']),
        'codNetPrice': !exists(json, 'codNetPrice') ? undefined : MoneyDTOFromJSON(json['codNetPrice']),
        'codDiscount': !exists(json, 'codDiscount') ? undefined : DiscountedLineItemPriceDTOFromJSON(json['codDiscount']),
        'codTaxedPrice': !exists(json, 'codTaxedPrice') ? undefined : TaxedPriceDTOFromJSON(json['codTaxedPrice']),
        'paymentId': !exists(json, 'paymentId') ? undefined : json['paymentId'],
        'items': ((json['items'] as Array<any>).map(ShippingDeliveryItemDTOFromJSON)),
        'deliveries': !exists(json, 'deliveries') ? undefined : ((json['deliveries'] as Array<any>).map(ShippingDeliveryDTOFromJSON)),
        'interfaceInteractions': !exists(json, 'interfaceInteractions') ? undefined : ((json['interfaceInteractions'] as Array<any>).map(ShippingInterfaceInteractionDTOFromJSON)),
    };
}

export function ShippingDTOToJSON(value?: ShippingDTO | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'createdAt': value.createdAt,
        'updatedAt': value.updatedAt,
        'id': value.id,
        'status': value.status,
        'method': IdReferenceDTOToJSON(value.method),
        'type': value.type,
        'authority': value.authority,
        'merchant': KeyReferenceDTOToJSON(value.merchant),
        'providerType': value.providerType,
        'price': MoneyDTOToJSON(value.price),
        'taxedPrice': TaxedPriceDTOToJSON(value.taxedPrice),
        'taxCategory': IdReferenceDTOToJSON(value.taxCategory),
        'taxRate': TaxRateDTOToJSON(value.taxRate),
        'discountedPrice': DiscountedLineItemPriceDTOToJSON(value.discountedPrice),
        'isCOD': value.isCOD,
        'codPrice': MoneyDTOToJSON(value.codPrice),
        'codNetPrice': MoneyDTOToJSON(value.codNetPrice),
        'codDiscount': DiscountedLineItemPriceDTOToJSON(value.codDiscount),
        'codTaxedPrice': TaxedPriceDTOToJSON(value.codTaxedPrice),
        'paymentId': value.paymentId,
        'items': ((value.items as Array<any>).map(ShippingDeliveryItemDTOToJSON)),
        'deliveries': value.deliveries === undefined ? undefined : ((value.deliveries as Array<any>).map(ShippingDeliveryDTOToJSON)),
        'interfaceInteractions': value.interfaceInteractions === undefined ? undefined : ((value.interfaceInteractions as Array<any>).map(ShippingInterfaceInteractionDTOToJSON)),
    };
}

/**
* @export
* @enum {string}
*/
export enum ShippingDTOStatusEnum {
    Initial = 'Initial',
    Pending = 'Pending',
    Delayed = 'Delayed',
    Partial = 'Partial',
    Shipped = 'Shipped',
    BackOrder = 'BackOrder'
}
/**
* @export
* @enum {string}
*/
export enum ShippingDTOTypeEnum {
    ShippingServiceProvider = 'ShippingServiceProvider'
}
/**
* @export
* @enum {string}
*/
export enum ShippingDTOAuthorityEnum {
    Platform = 'Platform',
    Merchant = 'Merchant'
}
/**
* @export
* @enum {string}
*/
export enum ShippingDTOProviderTypeEnum {
    Speedy = 'Speedy',
    Econt = 'Econt',
    Custom = 'Custom'
}



/* tslint:disable */
/* eslint-disable */
/**
 * Auth
 * Auth API
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ShippingParcelMeasurementDTO
 */
export interface ShippingParcelMeasurementDTO {
    /**
     * 
     * @type {number}
     * @memberof ShippingParcelMeasurementDTO
     */
    heightInMillimeter?: number;
    /**
     * 
     * @type {number}
     * @memberof ShippingParcelMeasurementDTO
     */
    lengthInMillimeter?: number;
    /**
     * 
     * @type {number}
     * @memberof ShippingParcelMeasurementDTO
     */
    widthInMillimeter?: number;
    /**
     * 
     * @type {number}
     * @memberof ShippingParcelMeasurementDTO
     */
    weightInGram: number;
}

export function ShippingParcelMeasurementDTOFromJSON(json: any): ShippingParcelMeasurementDTO {
    return ShippingParcelMeasurementDTOFromJSONTyped(json, false);
}

export function ShippingParcelMeasurementDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): ShippingParcelMeasurementDTO {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'heightInMillimeter': !exists(json, 'heightInMillimeter') ? undefined : json['heightInMillimeter'],
        'lengthInMillimeter': !exists(json, 'lengthInMillimeter') ? undefined : json['lengthInMillimeter'],
        'widthInMillimeter': !exists(json, 'widthInMillimeter') ? undefined : json['widthInMillimeter'],
        'weightInGram': json['weightInGram'],
    };
}

export function ShippingParcelMeasurementDTOToJSON(value?: ShippingParcelMeasurementDTO | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'heightInMillimeter': value.heightInMillimeter,
        'lengthInMillimeter': value.lengthInMillimeter,
        'widthInMillimeter': value.widthInMillimeter,
        'weightInGram': value.weightInGram,
    };
}



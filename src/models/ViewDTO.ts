/* tslint:disable */
/* eslint-disable */
/**
 * Auth
 * Auth API
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    AssetDTO,
    AssetDTOFromJSON,
    AssetDTOFromJSONTyped,
    AssetDTOToJSON,
    FilterStateDTO,
    FilterStateDTOFromJSON,
    FilterStateDTOFromJSONTyped,
    FilterStateDTOToJSON,
} from './';

/**
 * 
 * @export
 * @interface ViewDTO
 */
export interface ViewDTO {
    /**
     * 
     * @type {string}
     * @memberof ViewDTO
     */
    id: string;
    /**
     * 
     * @type {number}
     * @memberof ViewDTO
     */
    createdAt: number;
    /**
     * 
     * @type {number}
     * @memberof ViewDTO
     */
    updatedAt: number;
    /**
     * 
     * @type {number}
     * @memberof ViewDTO
     */
    version?: number;
    /**
     * 
     * @type {object}
     * @memberof ViewDTO
     */
    name: object;
    /**
     * 
     * @type {object}
     * @memberof ViewDTO
     */
    description?: object;
    /**
     * 
     * @type {Array<FilterStateDTO>}
     * @memberof ViewDTO
     */
    filters: Array<FilterStateDTO>;
    /**
     * 
     * @type {Array<AssetDTO>}
     * @memberof ViewDTO
     */
    assets?: Array<AssetDTO>;
    /**
     * 
     * @type {object}
     * @memberof ViewDTO
     */
    slug: object;
    /**
     * 
     * @type {object}
     * @memberof ViewDTO
     */
    metaTitle?: object;
    /**
     * 
     * @type {object}
     * @memberof ViewDTO
     */
    metaDescription?: object;
    /**
     * 
     * @type {object}
     * @memberof ViewDTO
     */
    metaKeywords?: object;
    /**
     * 
     * @type {object}
     * @memberof ViewDTO
     */
    custom?: object;
}

export function ViewDTOFromJSON(json: any): ViewDTO {
    return ViewDTOFromJSONTyped(json, false);
}

export function ViewDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): ViewDTO {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'createdAt': json['createdAt'],
        'updatedAt': json['updatedAt'],
        'version': !exists(json, 'version') ? undefined : json['version'],
        'name': json['name'],
        'description': !exists(json, 'description') ? undefined : json['description'],
        'filters': ((json['filters'] as Array<any>).map(FilterStateDTOFromJSON)),
        'assets': !exists(json, 'assets') ? undefined : ((json['assets'] as Array<any>).map(AssetDTOFromJSON)),
        'slug': json['slug'],
        'metaTitle': !exists(json, 'metaTitle') ? undefined : json['metaTitle'],
        'metaDescription': !exists(json, 'metaDescription') ? undefined : json['metaDescription'],
        'metaKeywords': !exists(json, 'metaKeywords') ? undefined : json['metaKeywords'],
        'custom': !exists(json, 'custom') ? undefined : json['custom'],
    };
}

export function ViewDTOToJSON(value?: ViewDTO | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'createdAt': value.createdAt,
        'updatedAt': value.updatedAt,
        'version': value.version,
        'name': value.name,
        'description': value.description,
        'filters': ((value.filters as Array<any>).map(FilterStateDTOToJSON)),
        'assets': value.assets === undefined ? undefined : ((value.assets as Array<any>).map(AssetDTOToJSON)),
        'slug': value.slug,
        'metaTitle': value.metaTitle,
        'metaDescription': value.metaDescription,
        'metaKeywords': value.metaKeywords,
        'custom': value.custom,
    };
}



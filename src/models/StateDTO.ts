/* tslint:disable */
/* eslint-disable */
/**
 * Auth
 * Auth API
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    KeyReferenceDTO,
    KeyReferenceDTOFromJSON,
    KeyReferenceDTOFromJSONTyped,
    KeyReferenceDTOToJSON,
} from './';

/**
 * 
 * @export
 * @interface StateDTO
 */
export interface StateDTO {
    /**
     * 
     * @type {number}
     * @memberof StateDTO
     */
    version?: number;
    /**
     * 
     * @type {string}
     * @memberof StateDTO
     */
    key: string;
    /**
     * 
     * @type {string}
     * @memberof StateDTO
     */
    type: StateDTOTypeEnum;
    /**
     * 
     * @type {object}
     * @memberof StateDTO
     */
    name?: object;
    /**
     * 
     * @type {object}
     * @memberof StateDTO
     */
    description?: object;
    /**
     * 
     * @type {string}
     * @memberof StateDTO
     */
    color?: string;
    /**
     * 
     * @type {boolean}
     * @memberof StateDTO
     */
    initial: boolean;
    /**
     * 
     * @type {Array<KeyReferenceDTO>}
     * @memberof StateDTO
     */
    transitions: Array<KeyReferenceDTO>;
    /**
     * 
     * @type {string}
     * @memberof StateDTO
     */
    id: string;
    /**
     * 
     * @type {number}
     * @memberof StateDTO
     */
    createdAt: number;
    /**
     * 
     * @type {number}
     * @memberof StateDTO
     */
    updatedAt: number;
    /**
     * 
     * @type {boolean}
     * @memberof StateDTO
     */
    system: boolean;
}

export function StateDTOFromJSON(json: any): StateDTO {
    return StateDTOFromJSONTyped(json, false);
}

export function StateDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): StateDTO {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'version': !exists(json, 'version') ? undefined : json['version'],
        'key': json['key'],
        'type': json['type'],
        'name': !exists(json, 'name') ? undefined : json['name'],
        'description': !exists(json, 'description') ? undefined : json['description'],
        'color': !exists(json, 'color') ? undefined : json['color'],
        'initial': json['initial'],
        'transitions': ((json['transitions'] as Array<any>).map(KeyReferenceDTOFromJSON)),
        'id': json['id'],
        'createdAt': json['createdAt'],
        'updatedAt': json['updatedAt'],
        'system': json['system'],
    };
}

export function StateDTOToJSON(value?: StateDTO | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'version': value.version,
        'key': value.key,
        'type': value.type,
        'name': value.name,
        'description': value.description,
        'color': value.color,
        'initial': value.initial,
        'transitions': ((value.transitions as Array<any>).map(KeyReferenceDTOToJSON)),
        'id': value.id,
        'createdAt': value.createdAt,
        'updatedAt': value.updatedAt,
        'system': value.system,
    };
}

/**
* @export
* @enum {string}
*/
export enum StateDTOTypeEnum {
    OrderState = 'OrderState',
    LineItemState = 'LineItemState',
    PaymentState = 'PaymentState',
    WalletState = 'WalletState'
}



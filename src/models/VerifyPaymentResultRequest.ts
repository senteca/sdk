/* tslint:disable */
/* eslint-disable */
/**
 * Auth
 * Auth API
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    MakePaymentInteractionDTO,
    MakePaymentInteractionDTOFromJSON,
    MakePaymentInteractionDTOFromJSONTyped,
    MakePaymentInteractionDTOToJSON,
} from './';

/**
 * 
 * @export
 * @interface VerifyPaymentResultRequest
 */
export interface VerifyPaymentResultRequest {
    /**
     * 
     * @type {string}
     * @memberof VerifyPaymentResultRequest
     */
    authority: string;
    /**
     * 
     * @type {string}
     * @memberof VerifyPaymentResultRequest
     */
    merchantKey?: string;
    /**
     * 
     * @type {string}
     * @memberof VerifyPaymentResultRequest
     */
    providerType: string;
    /**
     * 
     * @type {string}
     * @memberof VerifyPaymentResultRequest
     */
    responseMessage: string;
    /**
     * 
     * @type {MakePaymentInteractionDTO}
     * @memberof VerifyPaymentResultRequest
     */
    interaction: MakePaymentInteractionDTO;
}

export function VerifyPaymentResultRequestFromJSON(json: any): VerifyPaymentResultRequest {
    return VerifyPaymentResultRequestFromJSONTyped(json, false);
}

export function VerifyPaymentResultRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): VerifyPaymentResultRequest {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'authority': json['authority'],
        'merchantKey': !exists(json, 'merchantKey') ? undefined : json['merchantKey'],
        'providerType': json['providerType'],
        'responseMessage': json['responseMessage'],
        'interaction': MakePaymentInteractionDTOFromJSON(json['interaction']),
    };
}

export function VerifyPaymentResultRequestToJSON(value?: VerifyPaymentResultRequest | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'authority': value.authority,
        'merchantKey': value.merchantKey,
        'providerType': value.providerType,
        'responseMessage': value.responseMessage,
        'interaction': MakePaymentInteractionDTOToJSON(value.interaction),
    };
}



/* tslint:disable */
/* eslint-disable */
/**
 * Auth
 * Auth API
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    MoneyDTO,
    MoneyDTOFromJSON,
    MoneyDTOFromJSONTyped,
    MoneyDTOToJSON,
} from './';

/**
 * 
 * @export
 * @interface OfferDTO
 */
export interface OfferDTO {
    /**
     * 
     * @type {boolean}
     * @memberof OfferDTO
     */
    isBest: boolean;
    /**
     * 
     * @type {string}
     * @memberof OfferDTO
     */
    priceListKey: string;
    /**
     * 
     * @type {string}
     * @memberof OfferDTO
     */
    merchantKey: string;
    /**
     * 
     * @type {MoneyDTO}
     * @memberof OfferDTO
     */
    price: MoneyDTO;
    /**
     * 
     * @type {MoneyDTO}
     * @memberof OfferDTO
     */
    discountedPrice?: MoneyDTO;
    /**
     * 
     * @type {string}
     * @memberof OfferDTO
     */
    unit: OfferDTOUnitEnum;
    /**
     * 
     * @type {number}
     * @memberof OfferDTO
     */
    quantity: number;
    /**
     * 
     * @type {number}
     * @memberof OfferDTO
     */
    minQuantity: number;
    /**
     * 
     * @type {number}
     * @memberof OfferDTO
     */
    maxQuantity: number;
    /**
     * 
     * @type {number}
     * @memberof OfferDTO
     */
    step: number;
    /**
     * 
     * @type {string}
     * @memberof OfferDTO
     */
    sellUnit: OfferDTOSellUnitEnum;
    /**
     * 
     * @type {number}
     * @memberof OfferDTO
     */
    conversionRate: number;
}

export function OfferDTOFromJSON(json: any): OfferDTO {
    return OfferDTOFromJSONTyped(json, false);
}

export function OfferDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): OfferDTO {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'isBest': json['isBest'],
        'priceListKey': json['priceListKey'],
        'merchantKey': json['merchantKey'],
        'price': MoneyDTOFromJSON(json['price']),
        'discountedPrice': !exists(json, 'discountedPrice') ? undefined : MoneyDTOFromJSON(json['discountedPrice']),
        'unit': json['unit'],
        'quantity': json['quantity'],
        'minQuantity': json['minQuantity'],
        'maxQuantity': json['maxQuantity'],
        'step': json['step'],
        'sellUnit': json['sellUnit'],
        'conversionRate': json['conversionRate'],
    };
}

export function OfferDTOToJSON(value?: OfferDTO | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'isBest': value.isBest,
        'priceListKey': value.priceListKey,
        'merchantKey': value.merchantKey,
        'price': MoneyDTOToJSON(value.price),
        'discountedPrice': MoneyDTOToJSON(value.discountedPrice),
        'unit': value.unit,
        'quantity': value.quantity,
        'minQuantity': value.minQuantity,
        'maxQuantity': value.maxQuantity,
        'step': value.step,
        'sellUnit': value.sellUnit,
        'conversionRate': value.conversionRate,
    };
}

/**
* @export
* @enum {string}
*/
export enum OfferDTOUnitEnum {
    G = 'g',
    Kg = 'kg',
    L = 'l',
    Ml = 'ml',
    Item = 'item'
}
/**
* @export
* @enum {string}
*/
export enum OfferDTOSellUnitEnum {
    G = 'g',
    Kg = 'kg',
    L = 'l',
    Ml = 'ml',
    Item = 'item'
}


